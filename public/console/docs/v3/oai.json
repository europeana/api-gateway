{
    "openapi": "3.0.0",
    "info": {
        "title": "OAI-PMH Service",
        "description": "This console provides an overview of the methods publicly available for the Europeana OAI-PMH service",
        "version": "2.0",
        "termsOfService": "https://www.europeana.eu/en/rights/api-terms-of-use",
        "contact": {
            "name": "API Mailbox",
            "url": "https://pro.europeana.eu/page/apis",
            "email": "api@europeana.eu"
        },
        "license": {
            "name": "EUPL-1.2",
            "url": "https://joinup.ec.europa.eu/sites/default/files/custom-page/attachment/eupl_v1.2_en.pdf"
        }
    },
    "servers": [
        { "url": "https://api.europeana.eu/oai" }
    ],
    "externalDocs": {
        "description": "For more information, head to our comprehensive online documentation",
        "url": "https://pro.europeana.eu/page/harvesting-and-downloads"
    },
    "tags": [
        {
            "name": "Verbs",
            "description": "List of available verbs for this protocol"
        }
    ],
    "components": {
        "schemas": {
            "IdentityResponse": {
            },
            "ListMetadataFormatsResponse": {
            },
            "ListSetsResponse": {
            },
            "ListIdentifiersResponse": {
            },
            "GetRecordResponse": {
            },
            "ListRecordsResponse": {
            },
            "ErrorResponse": {
            }
        },
        "parameters": {
            "metadataPrefix": {
                "name": "metadataPrefix",
                "in": "query",
                "description": "A required argument that specifies the metadataPrefix of the format that should be included in the metadata part of the returned record. The metadata formats supported by the repository and for a particular record can be retrieved using the ListMetadataFormats request.",
                "required": false,
                "schema": {
                    "type": "string", 
                    "enum": [ "edm" ], 
                    "example": "edm"
                }
            },
            "set": {
                "name": "set",
                "in": "query",
                "description": "An optional argument with a setSpec value, which specifies set criteria for selective harvesting.",
                "required": false,
                "schema": {
                    "type": "string", 
                    "example": "2021672"
                }
            },
            "from": {
                "name": "from",
                "in": "query",
                "description": "An optional argument with a UTCdatetime value, which specifies a lower bound for datestamp-based selective harvesting.",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2000-01-01T00:00:00Z"
                }
            },
            "until": {
                "name": "until",
                "in": "query",
                "description": "An optional argument with a UTCdatetime value, which specifies a upper bound for datestamp-based selective harvesting.",
                "required": false,
                "schema": {
                  "type": "string",
                  "format": "date-time",
                    "example": "2025-01-01T00:00:00Z"
                }
            },
            "resumptionToken": {
                "name": "resumptionToken",
                "description": "An exclusive argument with a value that is the flow control token returned by a previous a request that issued an incomplete list.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "404": {
                "description": "Record with identifier does not exist",
                "content": {
                    "application/xml": {
                        "schema": { "$ref": "#/components/schemas/ErrorResponse" }
                    }
                }
            }
        }
    },
    "paths": {
        "/record?verb=Identify": {
            "get": {
                "tags": [ "Verbs" ],
                "summary": "Retrieve information about a repository.",
                "description": "This verb is used to retrieve information about a repository. Some of the information returned is required as part of the OAI-PMH.",
                "responses": {
                    "200": {
                        "description": "The request executed successfully.",
                        "content": {
                            "application/xml": {}
                        }
                    }
                }
            }
        },
        "/record?verb=ListMetadataFormats": {
            "get": {
                "tags": [ "Verbs" ],
                "summary": "Retrieve the metadata formats available from a repository.",
                "description": "This verb is used to retrieve the metadata formats available from a repository. An optional argument restricts the request to the formats available for a specific item.",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "An optional argument that specifies the unique identifier of the item for which available metadata formats are being requested. If this argument is omitted, then the response includes all metadata formats supported by this repository. Note that the fact that a metadata format is supported by a repository does not mean that it can be disseminated from all items in the repository.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "http://data.europeana.eu/item/2021672/resource_document_mauritshuis_670"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request executed successfully.",
                        "content": {
                            "application/xml": {
                                "schema": { "$ref": "#/components/schemas/ListMetadataFormatsResponse" }
                            }
                        }
                    },
                    "404": { "$ref": "#/components/responses/404" }
                }
            }
        },
        "/record?verb=GetRecord": {
            "get": {
                "tags": [ "Verbs" ],
                "summary": "Retrieve an individual metadata record from a repository.",
                "description": "This verb is used to retrieve an individual metadata record from a repository. Required arguments specify the identifier of the item from which the record is requested and the format of the metadata that should be included in the record.",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "A required argument that specifies the unique identifier of the item in the repository from which the record must be disseminated.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "http://data.europeana.eu/item/2021672/resource_document_mauritshuis_670"
                        }
            		},
                    { "$ref": "#/components/parameters/metadataPrefix" }
                ],
                "responses": {
                    "200": {
                        "description": "The request executed successfully.",
                        "content": {
                            "application/xml": {}
                        }
                    },
                    "400": {
                        "description": "The identifier and/or metadataPrefix is invalid or missing."
                    }
                }
            }
        },
        "/record?verb=ListSets": {
            "get": {
                "tags": [ "Verbs" ],
                "summary": "Retrieve the set structure of a repository.",
                "description": "This verb is used to retrieve the set structure of a repository, useful for selective harvesting.",
                "parameters": [
                    { "$ref": "#/components/parameters/resumptionToken" }
                ],
                "responses": {
                    "200": {
                        "description": "The request executed successfully.",
                        "content": {
                            "application/xml": {}
                        }
                    },
                    "400": {
                        "description": "The resumption token is not valid or incorrect."
                    }
                }
            }
        },
        "/record?verb=ListIdentifiers": {
            "get": {
                "tags": [ "Verbs" ],
                "summary": "Retrieve only headers rather than records.",
                "description": "This verb is an abbreviated form of ListRecords, retrieving only headers rather than records. Optional arguments permit selective harvesting of headers based on set membership and/or datestamp.",
                "parameters": [
                    { "$ref": "#/components/parameters/metadataPrefix"  },
                    { "$ref": "#/components/parameters/set"             },
                    { "$ref": "#/components/parameters/from"            },
                    { "$ref": "#/components/parameters/until"           },
                    { "$ref": "#/components/parameters/resumptionToken" }
                ],
                "responses": {
                    "200": {
                        "description": "The request executed successfully.",
                        "content": {
                            "application/xml": {}
                        }
                    },
                    "400": {
                        "description": "One (or all) of the parameters is not valid or incorrect."
                    }
                }
            }
        },
        "/record?verb=ListRecords": {
            "get": {
                "tags": [ "Verbs" ],
                "summary": "Harvest records from a repository.",
                "description": "This verb is used to harvest records from a repository. Optional arguments permit selective harvesting of records based on set membership and/or datestamp.",
                "parameters": [
                    { "$ref": "#/components/parameters/metadataPrefix"  },
                    { "$ref": "#/components/parameters/set"             },
                    { "$ref": "#/components/parameters/from"            },
                    { "$ref": "#/components/parameters/until"           },
                    { "$ref": "#/components/parameters/resumptionToken" }
                ],
                "responses": {
                    "200": {
                        "description": "The request executed successfully.",
                        "content": {
                            "application/xml": {}
                        }
                    },
                    "400": {
                        "description": "One (or all) of the parameters is not valid or incorrect."
                    }
                }
            }
        }
    }
}