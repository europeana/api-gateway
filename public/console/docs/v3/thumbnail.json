{
    "openapi": "3.0.0",
    "info": {
        "title": "Thumbnail API",
        "description": "This console provides an overview of the methods publicly available for the Thumbnail API",
        "version": "1.x",
        "termsOfService": "https://www.europeana.eu/en/rights/api-terms-of-use",
        "contact": {
            "name": "API Mailbox",
            "url": "https://pro.europeana.eu/page/apis",
            "email": "api@europeana.eu"
        },
        "license": {
            "name": "EUPL-1.2",
            "url": "https://joinup.ec.europa.eu/sites/default/files/custom-page/attachment/eupl_v1.2_en.pdf"
        }
    },
    "servers": [
        { 
            "url": "https://api.europeana.eu/thumbnail",
            "description": "Public endpoint for the production service."
        }
    ],
    "externalDocs": {
        "description": "For more information, head to our comprehensive online documentation",
        "url": "https://pro.europeana.eu/page/apis"
    },
    "tags": [
        {
            "name": "Thumbnail v3",
            "description": "Methods for retrieving thumbnails"
        },
        {
            "name": "Thumbnail v2",
            "description": "Methods for retrieving thumbnails"
        }
    ],
    "components": {
        "parameters": {
            "size": {
                "name": "size",
                "in": "query",
                "description": "The width size of the thumbnail. There are only 2 width sizes of the thumbnails: 200px and 400px.",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [ "200", "400" ],
                    "example": "200"
                }
            }
        },
        "responses": {
            "200": {
                "description": "The thumbnail was returned successfully."
            },
            "200_head": {
                "description": "The image exits and can be retrieved."
            },
            "400": { "$ref": "common.json#/components/responses/400" },
            "404": { "$ref": "common.json#/components/responses/404" }
        }
    },
    "paths": {
        "/v3/{size}/{mediaId}.{format}": {
            "get": {
                "tags": [ "Thumbnail v3" ],
                "summary": "Retrieve a thumbnail for a media resource.",
                "description": "Retrieve a thumbnail of a media resource that was accessible at a given URL.",
                "responses": {
                    "200": { "$ref": "#/components/responses/200" },
                    "400": { "$ref": "#/components/responses/400" },
                    "404": { "$ref": "#/components/responses/404" }
                }
            },
            "head": {
                "tags": [ "Thumbnail v3" ],
                "summary": "Check if a thumbnail exists for a given media resource.",
                "description": "Checks if a thumbnail is available for a given URL.",
                "responses": {
                    "200": { "$ref": "#/components/responses/200_head" },
                    "400": { "$ref": "#/components/responses/400" },
                    "404": { "$ref": "#/components/responses/404" }
                }
            },
            "parameters": [
                { "$ref": "#/components/parameters/size" },
                {
                    "name": "mediaId",
                    "in": "path",
                    "description": "The identifier of the media resource where  the thumbnail was generated from. It corresponds to the hash value of the URL where it is accessible.",
                    "required": true,
                    "schema": {
                    "type": "string",
                        "format": "[a-z0-9]+",
                        "example": "820911931db3ccb20e1b7a022ee6dd33"
                    }
                },
                {
                    "name": "format",
                    "in": "path",
                    "description": "The format of the returned image.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [ "jpg" ],
                        "example": "jpg"
                    }
                }
            ]
        },
        "/v2/url.json": {
            "get": {
                "tags": [ "Thumbnail v2" ],
                "summary": "Retrieve a thumbnail for a media resource.",
                "description": "Retrieve a thumbnail of a media resource that was accessible at a given URL.",
                "responses": {
                    "200": { "$ref": "#/components/responses/200" },
                    "400": { "$ref": "#/components/responses/400" },
                    "404": { "$ref": "#/components/responses/404" }
                }
            },
            "head": {
                "tags": [ "Thumbnail v2" ],
                "summary": "Check if a thumbnail exists for a given media resource.",
                "description": "Checks if a thumbnail is available for a given URL.",
                "responses": {
                    "200": { "$ref": "#/components/responses/200_head" },
                    "400": { "$ref": "#/components/responses/400" },
                    "404": { "$ref": "#/components/responses/404" }
                }
            },
            "parameters": [
                {
                    "name": "uri",
                    "in": "query",
                    "description": "The URL of the media resource from which a thumbnail was generated. Note that the URL should be encoded.",
                    "required": true,
                    "schema": {
                        "type": "string", "format": "uri",
                        "example": "http://www.mimo-db.eu/media/UEDIN/IMAGE/0032195c.jpg"
                    }
                },
                { "$ref": "#/components/parameters/size" },
                {
                    "name": "type",
                    "in": "query",
                    "description": ".",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [ "IMAGE", "SOUND", "VIDEO", "TEXT", "3D" ],
                        "example": "IMAGE"
                    }
                }
            ]
        }
    }
}