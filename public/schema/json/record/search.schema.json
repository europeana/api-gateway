{
    "$id": "http://www.europeana.eu/schemas/json/schema#",
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "title": "Search API - Model schema",
    "oneOf": [
        { "$ref": "#/definitions/SearchRequest" }
    ],
    "definitions": {
        "SearchRequest": {
            "title": "SearchRequest",
            "type": "object",
            "properties": {
                "query"        : { "$ref": "#/definitions/Query"         },
                "profile"      : { "$ref": "#/definitions/Profile"       },
                "facet"        : { "$ref": "#/definitions/Facet"         },
                "hit"          : { "$ref": "#/definitions/Hit"           },
                "sort"         : { "$ref": "#/definitions/Sort"          },
                "start"        : { "$ref": "#/definitions/Start"         },
                "rows"         : { "$ref": "#/definitions/Rows"          },
                "cursor"       : { "$ref": "#/definitions/Cursor"        },
                "qf"           : { "$ref": "#/definitions/QF"            },
                "theme"        : { "$ref": "#/definitions/Theme"         },
                "reusability"  : { "$ref": "#/definitions/Reusability"   },
                "landingPage"  : { "$ref": "#/definitions/LandingPage"   },
                "media"        : { "$ref": "#/definitions/Media"         },
                "thumbnail"    : { "$ref": "#/definitions/Thumbnail"     },
                "colourPalette": { "$ref": "#/definitions/ColourPalette" },
                "textFulltext" : { "$ref": "#/definitions/TextFulltext"  },
                "boost"        : { "$ref": "#/definitions/Boost"         },
                "callback"     : { "$ref": "#/definitions/Callback"      }
            },
            "required": [ "query" ],
            "additionalProperties": false
        },
        "Query": {
            "type": "string",
            "description": "The text or search criteria to be used for searching.",
            "example": "*"
        },
        "QF": {
            "type": "array",
            "items": {
               "type": "string",
               "example": "proxy_dc_creator:*"
            },
            "description": "A search query filter, ie. a filter is applied on the result list to remove unwanted results and therefore has no effect on ranking. This parameter can be used multiple types if more than one query filter is needed."
        },
        "Profile": {
            "type": "array",
            "items": { 
                "type": "string", 
                "enum": [ "minimal", "standard", "rich", "facets", "hits", "breadcrums", "params", "portal", "translate" ],
                "default": "standard",
                "example": "minimal"
            },
            "description": "A profile typically determines how extensive the response will be, by either dictating the metadata fields that will be present (ie. minimal, standard and rich) or appending additional data elements such as facets or breadcrumbs. Most profiles can be combined with the exception of the metadata based profiles or combined profiles such as rich."
        },
        "Facet": {
            "type": "array",
            "items": {
                "type": "string",
                "example": "proxy_dc_creator"
            },
            "description": "The name of the field where faceting will be applied. It is possible to facet on more then one field."
        },
        "Sort": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "random_12345+asc"
            },
            "description": "Sorting records in ascending or descending order of search fields. The following fields are supported: score (relenvancy of the search result), timestamp_created, timestamp_update, europeana_id, COMPLETENESS, is_fulltext, has_thumbnails, and has_media. Sorting on more than one field is possible by supplying as comma separated values. It is also possible to randomly order items by using the keyword 'random' instead of a field name. You can also request for a fixed random order by indicating a seed 'random_SEED' which is useful when paginating along the same randomized order.</br>Use: field_name+sort_order."
        },
        "Rows": {
            "type": "integer",
            "format": "int32",
            "minimum": 0, "maximum": 100, "default": 12,
            "description": "The number of records to return. Maximum is 100. Defaults to 12.",
            "example": 12
        },
        "Start": {
            "type": "integer",
            "format": "int32",
            "minimum": 1, "default": 1,
            "description": "The item in the search results to start with when using basic pagination. First item is 1. Defaults to 1.",
            "example": 1
        },
        "Cursor": {
            "type": "string",
            "description": "A cursor mark from where to start the search result set when using deep pagination. Set to '*' to start cursor-based pagination."
        },
        "Reusability": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [ "open", "restricted", "permission" ],
                "example": "open"
            },
            "description": "Filter by copyright status. Possible values are: open, restricted or permission."
        },
        "LandingPage": {
            "type": "boolean",
            "description": "Filter by items where the link to the original object on the providers website (edm:isShownAt) is present and verified to be working.",
            "example": true
        },
        "Media": {
            "type": "boolean",
            "description": "Filter by items where an URL to the full media file is present in the edm:isShownBy or any of the edm:hasView(s) metadata and is resolvable.",
            "example": true
        },
        "Thumbnail": {
            "type": "boolean",
            "description": "Filter by items where a thumbnail image has been generated for any of the WebResource media resources (thumbnail available in the edmPreview field).",
            "example": true
        },
        "Theme": {
            "type": "string",
            "enum": [ "archaelogy", "art", "fashion", "industrial", "manuscript", "map", "migration", "music", "nature", "newspaper", "photography", "sport", "ww1" ],
            "description": "Restricts the query over one of the <a target='_blank' href='https://www.europeana.eu/en/collections'>Europeana Thematic Collections</a>.",
            "example": "art"
        },
        "ColourPalette": {
            "type": "array",
            "description": "Filter by images where one of the colours (see colour palette) of an image matches the provided colour code. You can provide this parameter multiple times, the search will then do an 'AND' search on all the provided colours.",
            "items": {
                "type": "string",
                "format": "regex", "pattern": "^#[0-9A-Z]{6}$",
                "example": "#8A2BE2"
            }
        },
        "Hit": {
            "type": "object",
            "description": ".",
            "properties": {
                "fl"       : { "$ref": "#/definitions/HitFl"        },
                "selectors": { "$ref": "#/definitions/HitSelectors" }
            }
        },
        "HitFl": {
            "type": "string",
            "description": "Fields for which hit highlighting is generated. A wildcard of “*” (asterisk) can be used to match multiple fields, such as “fulltext.*” or even “*” to highlight on all fields where highlighting is possible. If omitted default to “*”. Multiple fields can be indicated using a comma or space.",
            "example": "fulltext.*"
        },
        "HitSelectors": {
            "type": "integer", "minimum": 1, "maximum": 100, "default": 3,
            "description": "The maximum number of highlighted selectors to generate per item. If omitted defaults to 3. It is possible for any number of selectors from 1 to this value to be generated, up to a limit of 10.",
            "example": 2
        },
        "TextFulltext": {
            "type": "boolean",
            "description": ".",
            "example": ""
        },
        "Boost": {
            "type": "string",
            "description": ".",
            "example": ""
        },
        "Callback": {
            "type": "string",
            "description": "Name of a client side callback function, see <a target='_blank' href='https://pro.europeana.eu/page/intro#JSONP'>JSONP</a>."
        }
    }
}