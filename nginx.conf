# Based on: https://raw.githubusercontent.com/cloudfoundry/nginx-buildpack/v1.0.1/fixtures/mainline/nginx.conf

worker_processes auto;

# see https://github.com/cloudfoundry/nginx-buildpack/blob/master/fixtures/mainline/nginx.conf#L2
daemon off;

error_log stderr warn;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
    charset utf-8;
    # EA-2236: Disable access logs
    access_log off;
    default_type application/octet-stream;
    include mime.types;
    sendfile on;

    tcp_nodelay on;
    tcp_nopush on;
    keepalive_timeout 30;
    port_in_redirect off; # Ensure that redirects don't include the internal container PORT - 8080

    upstream search_api {
        keepalive 10;
        server {{env "SEARCH_API_HOST"}}:443 resolve;
    }
    upstream thumbnail_api {
        keepalive 10;
        server {{env "THUMBNAIL_API_HOST"}}:443;
    }
    upstream oai_record {
        keepalive 10;
        server {{env "OAI_RECORD_HOST"}}:443;
    }
    upstream annotation_api {
        keepalive 10;
        server {{env "ANNOTATION_API_HOST"}}:443;
    }
    upstream entity_api {
        keepalive 10;
        server {{env "ENTITY_API_HOST"}}:443;
    }

    upstream entity_management {
        keepalive 10;
        server {{env "ENTITY_MANAGEMENT_HOST"}}:443;
    }

    upstream manifest_api {
        keepalive 10;
        server {{env "MANIFEST_API_HOST"}}:443;
    }
    upstream fulltext_api {
        keepalive 10;
        server {{env "FULLTEXT_API_HOST"}}:443;
    }
    upstream set_api {
        keepalive 10;
        server {{env "SET_API_HOST"}}:443;
    }

     upstream recommendation_api {
        keepalive 10;
        server {{env "RECOMMENDATION_API_HOST"}}:443;
    }

    server {
        listen {{port}};
        root public;
        index index.html;

        # Enforce SSL
        if ($http_x_forwarded_proto != "https") {
            return 301 https://$host$request_uri;
        }

        resolver {{env "RESOLVER_ADDRESS"}};

        add_header Link "<http://creativecommons.org/publicdomain/zero/1.0/>;rel=license";

        include nginx.conf.d/*.conf;

        # Redirect root
        location = / {
            return 302 {{env "ROOT_REDIRECT_URL"}};
        }


        # Old and deprecated (kept for the time being for backward compatibility)
        # ----------------------------------------------------------
        # Redirect old record url format (to be removed?)
        #    Nov 2019 - again 0 hits in last 4 months
        #    March 2020 - 0 hits at API, but I did notice that we have quite a bit of /resolve/record requests coming in via
        #                 Portal, so for now I'm not removing entirely because I'm not sure if this means we want to put it back
        #location ~ ^/resolve/record/(.*) {
        #    return 301 https://$host/api/v2/record/$1$is_args$args;
        #}

        # Not sure why we have this rule and if it's still useful.
        location ~ ^/api/(.*) {
            rewrite ^/api/(.*)$ /api/$1 break;
            proxy_set_header Host {{env "SEARCH_API_HOST"}};
            proxy_pass https://search_api;
        }
        
      
        # Redirect old thumbnail url format
        #    Feb 2019 - about 1000 requests a month are still done directly to api (and all of them fail with 500 or 404)
        #    Nov 2019 - still about 1000 requests per month, most return 500 or 404, a few return 301
        location = /api/image {
            return 301 https://$host/api/v2/thumbnail-by-url.json$is_args$args;
        }
        
        # Redirect old oai-pmh requests (added June 2019)
        location = /oaicat/OAIHandler {
            return 301 https://$host/oai/record$is_args$args;
        }
        
        # Redirect old oai-pmh index form page (added June 2019)
        location = /oaicat {
            return 301 https://$host/oai/record/index.html;
        }
        
        # Redirect old oai-pmh index form page (added June 2019)
        location = /oaicat/ {
            return 301 https://$host/oai/record/index.html;
        }
        
        # Redirect all old oai-pmh forms (added June 2019)
        location ~ ^/oaicat/(.*)\.(s)?html {
            return 301 https://$host/oai/record/$1.html;
        }
        
        # ----------------------------------------------------------

        # Recommendation API (alternative path, has to be defined before Search & Record)
        location ~ ^/record/(v2/)?(.*)/recommend {
            proxy_set_header Host {{env "RECOMMENDATION_API_HOST"}};
            set $recmdhost {{env "RECOMMENDATION_API_HOST"}};
            proxy_pass https://$recmdhost/recommend/record/$2$is_args$args;
        }

        # Search API
        location ~ ^/record/(v2/)?(open)?search(.*) {
            rewrite ^/record/(v2/)?(open)?search(.*)$ /api/v2/$2search$3 break;
            proxy_set_header Host {{env "SEARCH_API_HOST"}};
            #set $searchhost {{env "SEARCH_API_HOST"}};
            proxy_pass https://search_api;
#             proxy_pass https://search_api;
        }

        # Record API
        location ~ ^/record/(v2/)?(.*) {
            rewrite  ^/record/(v2/)?(.*)$ /api/v2/record/$2 break;
            proxy_set_header Host {{env "SEARCH_API_HOST"}};
            #set $searchhost {{env "SEARCH_API_HOST"}};
            proxy_pass https://search_api;
#             proxy_pass https://search_api;
        }

        # Always enable CORS for Search & Record API Swagger endpoint (as bug fix)
        location = /record/api-docs {
            proxy_set_header Host {{env "SEARCH_API_HOST"}};
#             set $searchhost {{env "SEARCH_API_HOST"}};
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin "*";
#             proxy_pass https://$searchhost/api/api-docs;
            proxy_pass https://search_api/api/api-docs;
        }

        # Thumbnail API v2 (old style)
        location = /api/v2/thumbnail-by-url.json {
            # Thumbnails are JPEGs; no need to gzip them
            gzip off;
            proxy_set_header Host {{env "THUMBNAIL_API_HOST"}};
            set $thumbnailhost {{env "THUMBNAIL_API_HOST"}};
            proxy_pass https://$thumbnailhost;
        }
        
        # Thumbnail API v2 (new style)
        location = /thumbnail/v2/url.json {
            # Thumbnails are JPEGs; no need to gzip them
            gzip off;
            proxy_set_header Host {{env "THUMBNAIL_API_HOST"}};
            set $thumbnailhost {{env "THUMBNAIL_API_HOST"}};
            proxy_pass https://$thumbnailhost/api/v2/thumbnail-by-url.json;
        }
        
        location ~ /thumbnail/v2/(.*) {
            # To make sure incorrect v2 requests are not sent to v3
            return 404;
        }
        
        # Thumbnail API v3
        location ~ /thumbnail/(v3/)?(.*) {
            # Thumbnails are JPEGs; no need to gzip them
            gzip off;
            proxy_set_header Host {{env "THUMBNAIL_API_HOST"}};
            set $thumbnailhost {{env "THUMBNAIL_API_HOST"}};
            proxy_pass https://$thumbnailhost/thumbnail/v3/$2$is_args$args;
        }

        # OAI-PMH requests
        location = /oai/record {
            proxy_set_header Host {{env "OAI_RECORD_HOST"}};
            set $oaihost {{env "OAI_RECORD_HOST"}};
            proxy_pass https://$oaihost/oai/$is_args$args;
        }
        
        # OAI-PMH index page
        location = /oai/record/ {
            proxy_set_header Host {{env "OAI_RECORD_HOST"}};
            set $oaihost {{env "OAI_RECORD_HOST"}};
            proxy_pass https://$oaihost/index.html;
        }
        
        # Change all OAI-PMH .shtml form pages to .html
        location ~ ^/oai/record/(.*)\.shtml {
            return 301 https://$host/oai/record/$1.html;
        }
        
        # OAI-PMH query forms
        location ~ ^/oai/record/(.*)\.html {
            proxy_set_header Host {{env "OAI_RECORD_HOST"}};
            set $oaihost {{env "OAI_RECORD_HOST"}};
            proxy_pass https://$oaihost/$1.html;
        }

        # Annotation API
        location ~ ^/annotation/(.*) {
            proxy_set_header Host {{env "ANNOTATION_API_HOST"}};
            set $annotationhost {{env "ANNOTATION_API_HOST"}};
            proxy_pass https://$annotationhost/annotation/$1$is_args$args;
        }

        # Entity - search, resolve and suggest are routed to Entity API
        location ~ ^/entity/(search|suggest|resolve|enrich|stats)(.*) {
            proxy_set_header Host {{env "ENTITY_API_HOST"}};
            set $entityhost {{env "ENTITY_API_HOST"}};
            proxy_pass https://$entityhost/entity/$1$2$is_args$args;
        }

        # Entity - all other requests go to Entity Management
        location ~ ^/entity/(.*) {
            proxy_set_header Host {{env "ENTITY_MANAGEMENT_HOST"}};
            set $entitymgthost {{env "ENTITY_MANAGEMENT_HOST"}};
            proxy_pass https://$entitymgthost/entity/$1$is_args$args;
        }

        # Manifest API
        location ~ ^/presentation/(.*)/manifest$ {
            proxy_set_header Host {{env "MANIFEST_API_HOST"}};
            set $manifesthost {{env "MANIFEST_API_HOST"}};
            proxy_pass https://$manifesthost/presentation/$1/manifest$is_args$args;
        }

        # Fulltext API
        location ~ ^/(fulltext|presentation)/(.*) {
            proxy_set_header Host {{env "FULLTEXT_API_HOST"}};
            set $fulltexthost {{env "FULLTEXT_API_HOST"}};
            proxy_pass https://$fulltexthost/presentation/$2$is_args$args;
        }

        # Recommendation API
        location ~ ^/recommend/(.*) {
            proxy_set_header Host {{env "RECOMMENDATION_API_HOST"}};
            set $recmdhost {{env "RECOMMENDATION_API_HOST"}};
            proxy_pass https://$recmdhost/recommend/$1$is_args$args;
        }

        # Recommendation API (alternative path)
        location ~ ^/set/(.*)/recommend {
            proxy_set_header Host {{env "RECOMMENDATION_API_HOST"}};
            set $recmdhost {{env "RECOMMENDATION_API_HOST"}};
            proxy_pass https://$recmdhost/recommend/set/$1$is_args$args;
        }

        # Sets API
        location ~ ^/set/(.*) {
            proxy_set_header Host {{env "SET_API_HOST"}};
            set $sethost {{env "ENTITY_API_HOST"}};
            proxy_pass https://$sethost/set/$1$is_args$args;
        }
        
        # ----------------------------------------------------------

        # Set CORS Headers for attribution snippet's CSS & font requests
        location ~ ^/attribution/(.*) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
    }
}
